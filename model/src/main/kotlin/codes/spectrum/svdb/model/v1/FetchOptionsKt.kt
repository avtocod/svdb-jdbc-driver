// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: v1/fetch.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package codes.spectrum.svdb.model.v1;

@kotlin.jvm.JvmName("-initializefetchOptions")
public inline fun fetchOptions(block: codes.spectrum.svdb.model.v1.FetchOptionsKt.Dsl.() -> kotlin.Unit): codes.spectrum.svdb.model.v1.Fetch.FetchOptions =
  codes.spectrum.svdb.model.v1.FetchOptionsKt.Dsl._create(codes.spectrum.svdb.model.v1.Fetch.FetchOptions.newBuilder()).apply { block() }._build()
/**
 * ```
 * клиентский запрос для SVDB
 * пока это просто обертка над строкой в формате 
 * встроенного языка SdQL
 * NOTE: структура - чтобы не было простых типов в API,
 * под расширение
 * ```
 *
 * Protobuf type `codes.spectrum.svdb.model.v1.FetchOptions`
 */
public object FetchOptionsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: codes.spectrum.svdb.model.v1.Fetch.FetchOptions.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: codes.spectrum.svdb.model.v1.Fetch.FetchOptions.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): codes.spectrum.svdb.model.v1.Fetch.FetchOptions = _builder.build()

    /**
     * ```
     * uid курсора, который нужно фетчить. если пусто, то фетчится последний курсор
     * ```
     *
     * `string cursorUid = 1;`
     */
    public var cursorUid: kotlin.String
      @JvmName("getCursorUid")
      get() = _builder.getCursorUid()
      @JvmName("setCursorUid")
      set(value) {
        _builder.setCursorUid(value)
      }
    /**
     * ```
     * uid курсора, который нужно фетчить. если пусто, то фетчится последний курсор
     * ```
     *
     * `string cursorUid = 1;`
     */
    public fun clearCursorUid() {
      _builder.clearCursorUid()
    }

    /**
     * ```
     * режим выполнения запроса
     * ```
     *
     * `.codes.spectrum.svdb.model.v1.FetchOptions.Mode mode = 2;`
     */
    public var mode: codes.spectrum.svdb.model.v1.Fetch.FetchOptions.Mode
      @JvmName("getMode")
      get() = _builder.getMode()
      @JvmName("setMode")
      set(value) {
        _builder.setMode(value)
      }
    public var modeValue: kotlin.Int
      @JvmName("getModeValue")
      get() = _builder.getModeValue()
      @JvmName("setModeValue")
      set(value) {
        _builder.setModeValue(value)
      }
    /**
     * ```
     * режим выполнения запроса
     * ```
     *
     * `.codes.spectrum.svdb.model.v1.FetchOptions.Mode mode = 2;`
     */
    public fun clearMode() {
      _builder.clearMode()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun codes.spectrum.svdb.model.v1.Fetch.FetchOptions.copy(block: `codes.spectrum.svdb.model.v1`.FetchOptionsKt.Dsl.() -> kotlin.Unit): codes.spectrum.svdb.model.v1.Fetch.FetchOptions =
  `codes.spectrum.svdb.model.v1`.FetchOptionsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

